[{"C:\\Users\\Steven\\Desktop\\portfolio\\src\\index.js":"1","C:\\Users\\Steven\\Desktop\\portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\Steven\\Desktop\\portfolio\\src\\App.js":"3","C:\\Users\\Steven\\Desktop\\portfolio\\src\\Night.js":"4","C:\\Users\\Steven\\Desktop\\portfolio\\src\\Day.js":"5","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Header.js":"6","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\About.js":"7","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Projects.js":"8","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\config\\theme.js":"9","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Contact.js":"10","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Footer.js":"11","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Skills.js":"12","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Socials.js":"13","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\ProjectCard.js":"14","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\SkillCard.js":"15"},{"size":656,"mtime":1607318940020,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606454576259,"results":"18","hashOfConfig":"17"},{"size":3290,"mtime":1609158526199,"results":"19","hashOfConfig":"17"},{"size":5951,"mtime":1607691395770,"results":"20","hashOfConfig":"17"},{"size":4660,"mtime":1607691364565,"results":"21","hashOfConfig":"17"},{"size":6385,"mtime":1609158546592,"results":"22","hashOfConfig":"17"},{"size":9272,"mtime":1631514616830,"results":"23","hashOfConfig":"17"},{"size":4081,"mtime":1607846629694,"results":"24","hashOfConfig":"17"},{"size":402,"mtime":1607908220876,"results":"25","hashOfConfig":"17"},{"size":7626,"mtime":1627694336281,"results":"26","hashOfConfig":"17"},{"size":1032,"mtime":1607691935441,"results":"27","hashOfConfig":"17"},{"size":6004,"mtime":1632383451051,"results":"28","hashOfConfig":"17"},{"size":1606,"mtime":1607863159019,"results":"29","hashOfConfig":"17"},{"size":4661,"mtime":1607864245701,"results":"30","hashOfConfig":"17"},{"size":1454,"mtime":1608115547156,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lrqshf",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"C:\\Users\\Steven\\Desktop\\portfolio\\src\\index.js",[],["73","74"],"C:\\Users\\Steven\\Desktop\\portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\Steven\\Desktop\\portfolio\\src\\App.js",["75","76","77","78","79","80","81","82","83"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Day from \"./Day\";\nimport Night from \"./Night\";\nimport Button from \"@material-ui/core/Button\";\nimport ExpandMoreOutlinedIcon from \"@material-ui/icons/ExpandMoreOutlined\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\nimport Skills from \"./components/Skills\";\nimport Contact from \"./components/Contact\";\nimport Footer from \"./components/Footer\";\nimport Fade from \"react-reveal/Fade\";\nimport {\n  Link,\n  DirectLink,\n  Element,\n  Events,\n  animateScroll as scroll,\n  scrollSpy,\n  scroller,\n} from \"react-scroll\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\n\nfunction App() {\n  let data = require(\"./components/data/projects.json\");\n\n  var Scroll = require(\"react-scroll\");\n  var scroller = Scroll.scroller;\n\n  const [theme, setTheme] = useState(\"light\");\n  const [showBack, setShowBack] = useState(false);\n\n  function changeTheme() {\n    let newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem(\"stevensprofile\", newTheme);\n  }\n\n  const checkScroll = () => {\n    const position = window.pageYOffset;\n    if (position > 100) {\n      let back = document.getElementsByClassName(\"showBack\")[0];\n      back.style.display = \"flex\";\n    } else {\n      let back = document.getElementsByClassName(\"showBack\")[0];\n\n      if (back) {\n        back.style.display = \"none\";\n      }\n    }\n  };\n\n  useEffect(() => {\n    const userPref = localStorage.getItem(\"stevensprofile\");\n    if (userPref) {\n      setTheme(userPref);\n    }\n\n    window.addEventListener(\"resize\", () => {\n      window.location.reload();\n    });\n\n    window.addEventListener(\"scroll\", checkScroll, { passive: true });\n  }, []);\n\n  useEffect(() => {\n    theme === \"light\" ? Day() : Night();\n  }, [theme]);\n\n  function handleScroll(name) {\n    scroller.scrollTo(name, {\n      duration: 900,\n      smooth: \"easeOutQuad\",\n      offset: 0,\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"showBack\">\n        <div\n          className={theme === \"dark\" ? \"back-up-dark\" : \"back-up\"}\n          onClick={() => {\n            scroll.scrollToTop();\n          }}\n        >\n          <ExpandLessIcon fontSize=\"large\"></ExpandLessIcon>\n        </div>\n      </div>\n      <div id=\"background\">\n        <canvas id=\"bgCanvas\"></canvas>\n      </div>\n\n      <Header theme={theme} changeTheme={changeTheme}></Header>\n\n      <div className=\"info-container\">\n          <div className=\"info-name\">Steven Lam</div>\n\n          <div\n            className=\"expand-down\"\n            onClick={() => {\n              handleScroll(\"About\");\n            }}\n          >\n            <ExpandMoreOutlinedIcon fontSize=\"large\"></ExpandMoreOutlinedIcon>\n          </div>\n      </div>\n\n      <Element name=\"About\">\n        <About theme={theme}></About>\n      </Element>\n\n      <Element name=\"Projects\">\n        <Projects projects={data} theme={theme}></Projects>\n      </Element>\n\n      <Element name=\"Skills\">\n        <Skills theme={theme}></Skills>\n      </Element>\n\n      <Element name=\"Contact\">\n        <Contact theme={theme}></Contact>\n      </Element>\n\n      <Footer theme={theme}></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Steven\\Desktop\\portfolio\\src\\Night.js",["84","85"],"import logo from './logo.svg';\nimport { useEffect } from 'react';\nimport './Night.css';\n\nfunction Night() {\n    (function () {\n      var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n              window.setTimeout(callback, 1000 / 60);\n          };\n      window.requestAnimationFrame = requestAnimationFrame;\n  })();\n\n    // append to the back div\n    var back = document.getElementById(\"background\")\n\n    let app = document.getElementsByClassName(\"App\")[0];\n    app.style.background = \"#0A0A05\";\n\n    while (back.lastElementChild.id !== \"bgCanvas\") {\n        back.removeChild(back.lastElementChild);\n      }\n    // clear out the canvas when changing themes\n\n\n  // Terrain stuff.\n  var background = document.getElementById(\"bgCanvas\"),\n      bgCtx = background.getContext(\"2d\"),\n      width = window.innerWidth,\n      height = window.innerHeight;\n\n  // eslint-disable-next-line no-unused-expressions\n  (height < 400) ? height = 400 : height;\n\n  background.width = width;\n  background.height = height;\n\n  function Terrain(options) {\n      options = options || {};\n      this.terrain = document.createElement(\"canvas\");\n      this.terCtx = this.terrain.getContext(\"2d\");\n      this.scrollDelay = options.scrollDelay || 90;\n      this.lastScroll = new Date().getTime();\n\n      this.terrain.classList.add(\"night-canvas\")\n      this.terrain.width = width;\n      this.terrain.height = height;\n      this.fillStyle = options.fillStyle || \"#191D4C\";\n      this.mHeight = options.mHeight || height;\n\n      // generate\n      this.points = [];\n\n      var displacement = options.displacement || 140,\n          power = Math.pow(2, Math.ceil(Math.log(width) / (Math.log(2))));\n\n      // set the start height and end height for the terrain\n      this.points[0] = this.mHeight;//(this.mHeight - (Math.random() * this.mHeight / 2)) - displacement;\n      this.points[power] = this.points[0];\n\n      // create the rest of the points\n      for (var i = 1; i < power; i *= 2) {\n          for (var j = (power / i) / 2; j < power; j += power / i) {\n              this.points[j] = ((this.points[j - (power / i) / 2] + this.points[j + (power / i) / 2]) / 2) + Math.floor(Math.random() * -displacement + displacement);\n          }\n          displacement *= 0.6;\n      }\n\n      back.appendChild(this.terrain)\n  }\n\n  Terrain.prototype.update = function () {\n      // draw the terrain\n      this.terCtx.clearRect(0, 0, width, height);\n      this.terCtx.fillStyle = this.fillStyle;\n      \n      if (new Date().getTime() > this.lastScroll + this.scrollDelay) {\n          this.lastScroll = new Date().getTime();\n          this.points.push(this.points.shift());\n      }\n\n      this.terCtx.beginPath();\n      for (var i = 0; i <= width; i++) {\n          if (i === 0) {\n              this.terCtx.moveTo(0, this.points[0]);\n          } else if (this.points[i] !== undefined) {\n              this.terCtx.lineTo(i, this.points[i]);\n          }\n      }\n\n      this.terCtx.lineTo(width, this.terrain.height);\n      this.terCtx.lineTo(0, this.terrain.height);\n      this.terCtx.lineTo(0, this.points[0]);\n      this.terCtx.fill();\n  }\n\n\n  // Second canvas used for the stars\n  bgCtx.fillStyle = '#05004c';\n  bgCtx.fillRect(0, 0, width, height);\n\n  // stars\n  function Star(options) {\n      this.size = Math.random() * 2;\n      this.speed = Math.random() * .05;\n      this.x = options.x;\n      this.y = options.y;\n  }\n\n  Star.prototype.reset = function () {\n      this.size = Math.random() * 2;\n      this.speed = Math.random() * .05;\n      this.x = width;\n      this.y = Math.random() * height;\n  }\n\n  Star.prototype.update = function () {\n      this.x -= this.speed;\n      if (this.x < 0) {\n          this.reset();\n      } else {\n          bgCtx.fillRect(this.x, this.y, this.size, this.size);\n      }\n  }\n\n  function ShootingStar() {\n      this.reset();\n  }\n\n  ShootingStar.prototype.reset = function () {\n      this.x = Math.random() * width;\n      this.y = 0;\n      this.len = (Math.random() * 80) + 10;\n      this.speed = (Math.random() * 10) + 6;\n      this.size = (Math.random() * 1) + 0.1;\n      // this is used so the shooting stars arent constant\n      this.waitTime = new Date().getTime() + (Math.random() * 3000) + 500;\n      this.active = false;\n  }\n\n  ShootingStar.prototype.update = function () {\n      if (this.active) {\n          this.x -= this.speed;\n          this.y += this.speed;\n          if (this.x < 0 || this.y >= height) {\n              this.reset();\n          } else {\n              bgCtx.lineWidth = this.size;\n              bgCtx.beginPath();\n              bgCtx.moveTo(this.x, this.y);\n              bgCtx.lineTo(this.x + this.len, this.y - this.len);\n              bgCtx.stroke();\n          }\n      } else {\n          if (this.waitTime < new Date().getTime()) {\n              this.active = true;\n          }\n      }\n  }\n\n  var entities = [];\n\n  // init the stars\n  for (var i = 0; i < height; i++) {\n      entities.push(new Star({\n          x: Math.random() * width,\n          y: Math.random() * height\n      }));\n  }\n\n  // Add 2 shooting stars that just cycle.\n  entities.push(new ShootingStar());\n  entities.push(new ShootingStar());\n  entities.push(new Terrain({mHeight : (height/2)-120}));\n  entities.push(new Terrain({displacement : 120, scrollDelay : 50, fillStyle : \"rgb(17,20,40)\", mHeight : (height/2)-60}));\n  entities.push(new Terrain({displacement : 100, scrollDelay : 20, fillStyle : \"rgb(10,10,5)\", mHeight : height/2}));\n\n  //animate background\n  function animate() {\n      bgCtx.fillStyle = '#110E19';\n      bgCtx.fillRect(0, 0, width, height);\n      bgCtx.fillStyle = '#ffffff';\n      bgCtx.strokeStyle = '#ffffff';\n\n      var entLen = entities.length;\n\n      while (entLen--) {\n          entities[entLen].update();\n      }\n      requestAnimationFrame(animate);\n  }\n  animate();\n}\n\nexport default Night;\n","C:\\Users\\Steven\\Desktop\\portfolio\\src\\Day.js",["86","87"],"import logo from './logo.svg';\nimport { useEffect } from 'react';\nimport './Day.css';\n\nfunction Day() {\n    (function () {\n      var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n              window.setTimeout(callback, 1000 / 60);\n          };\n      window.requestAnimationFrame = requestAnimationFrame;\n  })();\n\n  // append to the back div\n  var back = document.getElementById(\"background\")\n\n  let app = document.getElementsByClassName(\"App\")[0];\n  app.style.background = \"#272744\";\n\n  // Remove everything from back div\n  while (back.lastElementChild.id !== \"bgCanvas\") {\n    back.removeChild(back.lastElementChild);\n  }\n\n    // add birds to background\n    let birds = [\"one\", \"two\", \"three\", \"four\"];\n    for (let v = 0; v < birds.length; v++) {\n        let newBird = document.createElement(\"div\");\n        newBird.className = `bird-container bird-container--${birds[v]}`\n\n        let newBirdInner = document.createElement(\"div\");\n        newBirdInner.className = `bird bird--${birds[v]}`\n\n        newBird.appendChild(newBirdInner);\n        back.appendChild(newBird);\n    }\n\n\n  // Terrain stuff.\n  var background = document.getElementById(\"bgCanvas\"),\n      bgCtx = background.getContext(\"2d\"),\n      width = window.innerWidth,\n      height = window.innerHeight;\n\n  // eslint-disable-next-line no-unused-expressions\n  (height < 400) ? height = 400 : height;\n\n  background.width = width;\n  background.height = height;\n\n  function Terrain(options) {\n      options = options || {};\n      this.terrain = document.createElement(\"canvas\");\n      this.terCtx = this.terrain.getContext(\"2d\");\n      this.scrollDelay = options.scrollDelay || 90;\n      this.lastScroll = new Date().getTime();\n\n      this.terrain.classList.add(\"day-canvas\")\n      this.terrain.width = width;\n      this.terrain.height = height;\n      this.fillStyle = options.fillStyle || \"#C69FA5\";\n      this.mHeight = options.mHeight || height;\n\n      // generate\n      this.points = [];\n\n      var displacement = options.displacement || 140,\n          power = Math.pow(2, Math.ceil(Math.log(width) / (Math.log(2))));\n\n      // set the start height and end height for the terrain\n      this.points[0] = this.mHeight;//(this.mHeight - (Math.random() * this.mHeight / 2)) - displacement;\n      this.points[power] = this.points[0];\n\n      // create the rest of the points\n      for (var i = 1; i < power; i *= 2) {\n          for (var j = (power / i) / 2; j < power; j += power / i) {\n              this.points[j] = ((this.points[j - (power / i) / 2] + this.points[j + (power / i) / 2]) / 2) + Math.floor(Math.random() * -displacement + displacement);\n          }\n          displacement *= 0.6;\n      }\n\n      back.appendChild(this.terrain)\n  }\n \n  Terrain.prototype.update = function () {\n      // draw the terrain\n      this.terCtx.clearRect(0, 0, width, height);\n      this.terCtx.fillStyle = this.fillStyle;\n      \n      if (new Date().getTime() > this.lastScroll + this.scrollDelay) {\n          this.lastScroll = new Date().getTime();\n          this.points.push(this.points.shift());\n      }\n\n      this.terCtx.beginPath();\n      for (var i = 0; i <= width; i++) {\n          if (i === 0) {\n              this.terCtx.moveTo(0, this.points[0]);\n          } else if (this.points[i] !== undefined) {\n              this.terCtx.lineTo(i, this.points[i]);\n          }\n      }\n\n      this.terCtx.lineTo(width, this.terrain.height);\n      this.terCtx.lineTo(0, this.terrain.height);\n      this.terCtx.lineTo(0, this.points[0]);\n      this.terCtx.fill();\n  }\n\n\n  var entities = [];\n\n  entities.push(new Terrain({mHeight : (height/2)-140}));\n  entities.push(new Terrain({displacement : 120, scrollDelay : 50, fillStyle : \"#8B6E9D\", mHeight : (height/2)-60}));\n  entities.push(new Terrain({displacement : 190, scrollDelay : 30, fillStyle : \"#494E7F\", mHeight : height/2}));\n  entities.push(new Terrain({displacement : 250, scrollDelay : 20, fillStyle : \"#272744\", mHeight : height/1.9}));\n\n  //animate background\n  function animate() {\n\n    // Background gradient for sunset\n    var my_gradient = bgCtx.createLinearGradient(0, 0, 0, 170);\n    my_gradient.addColorStop(0, \"#F3D4AB\");\n    my_gradient.addColorStop(1, \"#F3D4AB\");\n\n\n      bgCtx.fillStyle = my_gradient;\n      bgCtx.fillRect(0, 0, width, height);\n      bgCtx.fillStyle = '#ffffff';\n      bgCtx.strokeStyle = '#ffffff';\n\n      var entLen = entities.length;\n\n      while (entLen--) {\n          entities[entLen].update();\n      }\n\n      requestAnimationFrame(animate);\n  }\n  animate();\n}\n\nexport default Day;\n","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Header.js",["88","89","90"],"import React, { useEffect, useState } from \"react\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport Fade from \"react-reveal/Fade\";\nimport Slide from 'react-reveal/Slide';\nimport \"../menu.css\";\nconst MOBILE_SIZE = \"950\";\n\nconst MainContainer = styled.header`\n  height: fit-content;\n  width: fit-content;\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    color: ${(props) => (props.dark ? \"white\" : \"black\")};\n  }\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    display: none;\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    background-color: ${(props) =>\n      props.dark\n        ? props.theme.darkTheme.header\n        : props.theme.lightTheme.header};\n  }\n`;\n\nconst MenuContainer = styled.div`\n  margin-top: 40px;\n  padding: 30px;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 4;\n\n  button {\n    border: none;\n    background-color: transparent;\n  }\n\n  .hamburger--squeeze {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .menu-text {\n    margin-left: 12px;\n    font-weight: 700;\n    font-size: 1.4rem;\n  }\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    button {\n      border: none;\n      color: ${(props) => (props.dark ? \"white\" : \"gray\")};\n      background-color: transparent;\n    }\n\n    .hamburger-inner,\n    .hamburger-inner::before,\n    .hamburger-inner::after {\n      background: ${(props) => (props.dark ? \"white\" : \"gray\")};\n    }\n  }\n`;\n\nconst Content = styled.div`\n  padding: 25px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  width: 50%;\n\n  @media (max-width: 1300px) {\n    width: 70%;\n  }\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    flex-direction: column;\n  }\n`;\n\nconst SwitchContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 7px 5px;\n  background-color: ${(props) =>\n    props.dark ? props.theme.darkTheme.header : props.theme.lightTheme.header};\n  height: fit-content;\n  width: fit-content;\n  border-radius: 33%;\n`;\n\nconst NavItems = styled.nav`\n  display: flex;\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    flex-direction: column;\n    margin-bottom: 30px;\n  }\n\n  .nav-item {\n    font-size: 1.2rem;\n    margin: 0px 5px;\n    text-transform: uppercase;\n    text-decoration: none;\n    letter-spacing: 0.15em;\n    cursor: pointer;\n    font-weight: 500;\n  \n    display: inline-block;\n    padding: 15px 20px;\n    position: relative;\n    color: ${(props) => (props.dark ? \"white\" : \"gray\")};\n  \n    &:hover {\n      border-bottom\n    }\n  \n    &:hover:after { \n      width: 100%; \n      left: 0; \n    }\n  \n    &:after {    \n      background: none repeat scroll 0 0 transparent;\n      bottom: 0;\n      content: \"\";\n      display: block;\n      height: 2px;\n      left: 50%;\n      position: absolute;\n      background: ${(props) => (props.dark ? \"white\" : \"gray\")};\n      transition: width 0.3s ease 0s, left 0.3s ease 0s;\n      width: 0;\n  \n    }\n  }\n`;\n\nconst NavItem = styled.div``;\n\nconst SwitchText = styled.div`\n  text-transform: uppercase;\n  font-weight: bold;\n  color: ${(props) => (props.dark ? \"lightgrey\" : \"#61B8EE\")};\n  margin: 0px 8px;\n`;\n\nconst Header = ({ theme, changeTheme }) => {\n  const [mobile, setMobile] = useState(false);\n\n  var Scroll = require(\"react-scroll\");\n  var scroller = Scroll.scroller;\n\n  function handleScroll(name) {\n    console.log(`scrolling to ${name}`);\n    scroller.scrollTo(name, {\n      duration: 1100,\n      smooth: true,\n      offset: 0,\n    });\n  }\n\n  function toggleMenu() {\n    let menu = document.getElementsByClassName(\"hamburger--squeeze\")[0];\n    let menuItems = document.getElementById(\"menu-items\");\n\n    if (menu.classList.contains(\"is-active\")) {\n      menu.classList.remove(\"is-active\");\n      menuItems.style.display = \"none\";\n    } else {\n      menu.classList.add(\"is-active\");\n      menuItems.style.display = \"flex\";\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"loading header\");\n    let width = window.screen.width;\n    if (width < MOBILE_SIZE) {\n      setMobile(true);\n    }\n  }, []);\n  return (\n    <MainContainer dark={theme === \"dark\"}>\n      {mobile && (\n        <MenuContainer dark={theme === \"dark\"}>\n          <button class=\"hamburger--squeeze\" type=\"button\" onClick={toggleMenu}>\n            <span class=\"hamburger-box\">\n              <span class=\"hamburger-inner\"></span>\n            </span>\n            <span class=\"menu-text\">MENU</span>\n          </button>\n        </MenuContainer>\n      )}\n\n      <Container id=\"menu-items\" dark={theme === \"dark\"}>\n        <Content>\n            <NavItems dark={theme === \"dark\"}>\n              <NavItem\n                className=\"nav-item\"\n                onClick={() => {\n                  handleScroll(\"About\");\n                }}\n              >\n                About\n              </NavItem>\n              <NavItem\n                className=\"nav-item\"\n                onClick={() => {\n                  handleScroll(\"Projects\");\n                }}\n              >\n                Projects\n              </NavItem>\n              <NavItem\n                className=\"nav-item\"\n                onClick={() => {\n                  handleScroll(\"Skills\");\n                }}\n              >\n                Skills\n              </NavItem>\n              <NavItem\n                className=\"nav-item\"\n                onClick={() => {\n                  handleScroll(\"Contact\");\n                }}\n              >\n                Contact\n              </NavItem>\n            </NavItems>\n            <SwitchContainer dark={theme === \"dark\"}>\n              <DarkModeToggle\n                onChange={() => {\n                  changeTheme();\n                }}\n                checked={theme === \"dark\"}\n                size={60}\n              />\n              <SwitchText dark={theme === \"dark\"}>{theme}</SwitchText>\n            </SwitchContainer>\n        </Content>\n      </Container>\n    </MainContainer>\n  );\n};\n\nHeader.propTypes = {\n  theme: PropTypes.string,\n  changeTheme: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  theme: \"light\",\n  changeTheme: null,\n};\n\nexport default Header;\n","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\About.js",["91","92"],"import React, { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Socials from \"../components/Socials\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport ComputerIcon from \"@material-ui/icons/Computer\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\",\n    background: \"white\",\n  },\n\n  darkPaper: {\n    padding: \"6px 16px\",\n    background: \"#1F1F1F\",\n    color: \"#808080\",\n  },\n\n  darkTypography: {\n    color: \"#808080\",\n  },\n\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst MOBILE_SIZE = \"500\";\nconst TABLET_SIZE = \"1100\";\n\nconst Container = styled.div`\n  display: flex;\n  padding: 5% 2%;\n  align-items: center;\n  height: 900px;\n  flex-direction: column;\n  background-color: ${(props) => props.theme.lightTheme.background};\n\n  ${(props) =>\n    props.dark &&\n    css`\n      background-color: ${(props) => props.theme.darkTheme.darkerBackground};\n      color: #d3d3d3;\n    `}\n\n  @media (max-width: ${TABLET_SIZE}${\"px\"}) {\n    height: 900px;\n  }\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    height: 1200px;\n  }\n`;\n\nconst Title = styled.div`\n  margin-top: 35px;\n  font-weight: 500;\n  font-size: 2.2rem;\n  color: gray;\n\n  :after {\n    bottom: -8px;\n    content: \"\";\n    display: block;\n    height: 4px;\n    position: relative;\n    width: 60%;\n    left: calc(50% - 30%);\n    background: gray;\n }\n\n}\n`;\n\nconst AboutMain = styled.div`\n  margin-top: 70px;\n  width: 75%;\n  height: 60%;\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: ${TABLET_SIZE}${\"px\"}) {\n    height: 50%;\n    flex-direction: column;\n    align-items: center;\n    width: 95%;\n  }\n\n`;\n\nconst Summary = styled.div`\n  width: 47%;\n  font-size: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n\n  .connect-text {\n    margin-top: 30px;\n  }\n\n  @media (max-width: ${TABLET_SIZE}${\"px\"}) {\n    margin-bottom: 40px;\n    width: 85%;\n    text-align: left;\n  }\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    width: 85%;\n  }\n\n`;\n\nconst TimelineContainer = styled.div`\n  text-align: center;\n  width: 49%;\n  margin-bottom: 50px;\n\n  svg {\n    color: grey;\n  }\n\n  .timeline-title {\n    margin-bottom: 15px;\n    font-size: 2rem;\n    color: ${(props) => (props.dark ? \"gray\" : \"#808080\")};\n  }\n\n  h1 {\n    color: ${(props) => (props.dark ? \"#BEBEBE\" : \"black\")};\n  }\n\n  .timeline-content {\n    text-align: left;\n    position: relative;\n    right: 200px;\n    width: 130%;\n  }\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    width: 100%;\n    \n  \n    .timeline-content {\n      position: relative;\n      left: -60px;\n      width: 400px;\n    }\n  }\n\n  @media (max-width: ${TABLET_SIZE}${\"px\"}) {\n    width: 85%;\n  }\n`;\n\nconst About = ({ theme }) => {\n  const classes = useStyles();\n\n  return (\n    <Container dark={theme === \"dark\"}>\n      <Title>About</Title>\n      <AboutMain dark={theme === \"dark\"}>\n          <Summary>\n          <ScrollAnimation\n          className=\"project-anim\"\n          initiallyVisible={true}\n          animateIn=\"fadeInLeft\"\n          animateOnce={true}\n          duration={1}\n        >\n            <div>\n              Hello! I'm currently a full time student studying computer science\n              at UNSW and also a part-time software engineer. I'm always looking for a challenge and enjoy exploring\n              new areas of work.\n            </div>\n            <div className=\"connect-text\">Connect with me!</div>\n            <Socials align=\"center\" theme={theme}></Socials>\n            </ScrollAnimation>\n          </Summary>\n        <TimelineContainer dark={theme === \"dark\"}>\n        <ScrollAnimation\n          className=\"project-anim\"\n          initiallyVisible={true}\n          animateIn=\"fadeInRight\"\n          animateOnce={true}\n          duration={1}\n        >\n          <div className=\"timeline-title\">Experience</div>\n          <div className=\"timeline-content\">\n            <Timeline align=\"left\">\n            <TimelineItem>\n                <TimelineOppositeContent>\n                  <Typography\n                    variant=\"body2\"\n                    className={theme === \"dark\" ? classes.darkTypography : null}\n                  >\n                    2021 - Present\n                  </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                  <TimelineDot variant=\"outlined\" color=\"grey\">\n                    <ComputerIcon />\n                  </TimelineDot>\n                  <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                  <Paper\n                    elevation={3}\n                    className={\n                      theme === \"dark\" ? classes.darkPaper : classes.paper\n                    }\n                  >\n                    <Typography variant=\"h6\" component=\"h1\">\n                      Software Engineer\n                    </Typography>\n                    <Typography>PUSHAS</Typography>\n                  </Paper>\n                </TimelineContent>\n              </TimelineItem>\n\n              <TimelineItem>\n                <TimelineOppositeContent>\n                  <Typography\n                    variant=\"body2\"\n                    className={theme === \"dark\" ? classes.darkTypography : null}\n                  >\n                    2021 - 2021\n                  </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                  <TimelineDot variant=\"outlined\" color=\"grey\">\n                    <ComputerIcon />\n                  </TimelineDot>\n                  <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                  <Paper\n                    elevation={3}\n                    className={\n                      theme === \"dark\" ? classes.darkPaper : classes.paper\n                    }\n                  >\n                    <Typography variant=\"h6\" component=\"h1\">\n                      Junior Software Engineer\n                    </Typography>\n                    <Typography>Ordermentum</Typography>\n                  </Paper>\n                </TimelineContent>\n              </TimelineItem>\n              <TimelineItem>\n                <TimelineOppositeContent>\n                  <Typography\n                    variant=\"body2\"\n                    className={theme === \"dark\" ? classes.darkTypography : null}\n                  >\n                    2019 - 2019\n                  </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                  <TimelineDot variant=\"outlined\" color=\"grey\">\n                    <SchoolIcon />\n                  </TimelineDot>\n                  <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                  <Paper\n                    elevation={3}\n                    className={\n                      theme === \"dark\" ? classes.darkPaper : classes.paper\n                    }\n                  >\n                    <Typography variant=\"h6\" component=\"h1\">\n                      Tutor\n                    </Typography>\n                    <Typography>TOTC Tuition</Typography>\n                  </Paper>\n                </TimelineContent>\n              </TimelineItem>\n              <TimelineItem>\n                <TimelineOppositeContent>\n                  <Typography\n                    variant=\"body2\"\n                    className={theme === \"dark\" ? classes.darkTypography : null}\n                  >\n                    2015 - 2017\n                  </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                  <TimelineDot variant=\"outlined\" color=\"grey\">\n                    <CameraAltIcon />\n                  </TimelineDot>\n                </TimelineSeparator>\n                <TimelineContent>\n                  <Paper\n                    elevation={3}\n                    className={\n                      theme === \"dark\" ? classes.darkPaper : classes.paper\n                    }\n                  >\n                    <Typography variant=\"h6\" component=\"h1\">\n                      Photo Editor\n                    </Typography>\n                    <Typography>CAB Fast Photo</Typography>\n                  </Paper>\n                </TimelineContent>\n              </TimelineItem>              \n\n            </Timeline>\n          </div>\n          </ScrollAnimation>\n        </TimelineContainer>\n      </AboutMain>\n    </Container>\n  );\n};\n\nexport default About;\n","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Projects.js",[],"C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\config\\theme.js",[],"C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Contact.js",["93"],"import React, { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport poly from \"../assets/images/poly1.svg\";\nimport emailjs from 'emailjs-com';\n\nconst Outer = styled.div`\n  width: 100%;\n  height: 650px;\n  position: relative;\n  background-color: transparent;\n`;\n\nconst Title = styled.div`\n  font-weight: 500;\n  font-size: 2.2rem;\n  margin: 55px;\n  margin-top: 115px;\n  color: ${(props) => (props.dark ? \"#D3D3D3\" : \"black\")};\n\n  :after {\n    bottom: -8px;\n    content: \"\";\n    display: block;\n    height: 4px;\n    position: relative;\n    width: 60%;\n    left: calc(50% - 30%);\n    background: ${(props) => (props.dark ? \"#D3D3D3\" : \"black\")};\n }\n\n}\n`;\n\nconst Polygon = styled.div`\n  height: 50px;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: ${(props) => props.theme.lightTheme.background};\n\n  ${(props) =>\n    props.dark &&\n    css`\n      background-color: ${(props) => props.theme.darkTheme.darkerBackground};\n      color: white;\n    `}\n\n  svg {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100px;\n    fill: ${(props) => props.theme.lightTheme.main};\n\n    ${(props) =>\n      props.dark &&\n      css`\n        fill: ${(props) => props.theme.darkTheme.main};\n      `}\n  }\n\n  @media (max-width: 699px) {\n    .svg--lg {\n      display: none;\n    }\n  }\n\n  @media (min-width: 700px) {\n    .svg--sm {\n      display: none;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 600px;\n  background-color: ${(props) => props.theme.lightTheme.main};\n\n  ${(props) =>\n    props.dark &&\n    css`\n      background-color: ${(props) => props.theme.darkTheme.main};\n      color: white;\n    `}\n\n  #from_name {\n    padding: 15px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.2rem;\n    width: 350px;\n    height: 38px;\n    border: none;\n    border-radius: 5px;\n    outline: black;\n    color: ${(props) => (props.dark ? \"#D3D3D3\" : \"black\")};\n    background-color: ${(props) =>\n      props.dark ? props.theme.darkTheme.input : props.theme.lightTheme.input};\n\n    ::placeholder {\n      color: ${(props) =>\n        props.dark ? props.theme.darkTheme.placeholder : \"gray\"};\n    }\n  }\n\n  #email {\n    margin: 15px 0px;\n    padding: 15px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.2rem;\n    width: 350px;\n    height: 38px;\n    border: none;\n    border-radius: 5px;\n    outline: black;\n    color: ${(props) => (props.dark ? \"#D3D3D3\" : \"black\")};\n    background-color: ${(props) =>\n      props.dark ? props.theme.darkTheme.input : props.theme.lightTheme.input};\n\n    ::placeholder {\n      color: ${(props) =>\n        props.dark ? props.theme.darkTheme.placeholder : \"gray\"};\n    }\n  }\n\n  #message {\n    margin: 15px 0px;\n    padding: 15px;\n    display: flex;\n    font-size: 1.2rem;\n    width: 350px;\n    height: 100px;\n    border: none;\n    border-radius: 5px;\n    resize: none;\n    font-family: inherit;\n    outline: black;\n    color: ${(props) => (props.dark ? \"#D3D3D3\" : \"black\")};\n    background-color: ${(props) =>\n      props.dark ? props.theme.darkTheme.input : props.theme.lightTheme.input};\n\n    ::placeholder {\n      color: ${(props) =>\n        props.dark ? props.theme.darkTheme.placeholder : \"gray\"};\n    }\n  }\n\n  .submit-button {\n    margin-top: 10px;\n    width: 350px;\n    height: 35px;\n    border-radius: 5px;\n    border: none;\n    font-family: inherit;\n    font-size: 1.2rem;\n    outline: black;\n    color: ${(props) => (props.dark ? \"white\" : \"#3d3d3d\")};\n    background: ${(props) => (props.dark ? \"#252b6b\" : \"#fff2e0\")};\n    cursor: pointer;\n    font-weight: 600;\n  }\n\n  .submit-button: hover {\n    background: ${(props) => (props.dark ? \"#3e469c\" : \"#ffe7c7\")};\n  }\n\n  .form-message {\n    margin-top: 10px;\n    font-weight: 500;\n  }\n\n  @media (max-width: 500px) {\n    .submit-button {\n      width: 300px;\n    }\n\n    #message {\n      width: 300px;\n\n    }\n\n    #from_name {\n      width: 300px;\n    }\n\n    #email {\n      width: 300px;\n    }\n  }\n\n`;\n\nconst Contact = ({ theme }) => {\n  const {REACT_APP_USER_ID, REACT_APP_SERVICE_ID, REACT_APP_TEMPLATE_ID} = process.env;\n\n  const [formState, setFormState] = useState({\n    from_name: null,\n    email: null,\n    message: null,\n  });\n\n  const [isValid, setIsValid] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showMissing, setShowMissing] = useState(false);\n\n  function handleChange(e) {\n    setShowMissing(false);\n    setShowSuccess(false);\n    const value = e.target.value;\n    const name = e.target.name;\n    const id = e.target.id;\n    let i = document.getElementById(id);\n\n    if (value === \"\" || value === null) {\n      i.style.border = \"1px solid red\"\n    } else {\n      i.style.border = \"none\"\n    }\n\n    setFormState({\n      ...formState,\n      [name]: value\n    })\n  }\n\n  function highlightMissing() {\n    for (const [key, value] of Object.entries(formState)) {\n      if (value === \"\" || value === null) {\n        let i = document.getElementById(key);\n        i.style.border = \"1px solid red\"\n      }\n    }\n  }\n\n  useEffect(() => {\n    const name = formState.from_name;\n    const email = formState.email;\n    const message =formState.message;\n    if (name && email && message) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n\n  }, [formState])\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    if (!isValid) {\n      highlightMissing();\n      setShowMissing(true);\n      return;\n    }\n\n\n    emailjs.sendForm(REACT_APP_SERVICE_ID, REACT_APP_TEMPLATE_ID, e.target, REACT_APP_USER_ID)\n      .then((result) => {\n          console.log(result.text);\n      }, (error) => {\n          console.log(error.text);\n      });    \n\n    e.target.reset();\n\n    setShowSuccess(true);\n  }\n\n  return (\n    <Outer>\n      <Polygon dark={theme === \"dark\"}>\n        <svg\n          height=\"60px\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"none\"\n        >\n          <polygon\n            class=\"svg--sm\"\n            points=\"0,0 30,100 65,21 90,100 100,75 100,100 0,100\"\n          />\n          <polygon\n            class=\"svg--lg\"\n            points=\"0,0 15,100 33,21 45,100 50,75 55,100 72,20 85,100 95,50 100,80 100,100 0,100\"\n          />\n        </svg>\n      </Polygon>\n      <Container dark={theme === \"dark\"}>\n        <Title dark={theme === \"dark\"}>Get in touch!</Title>\n        <div className=\"form-container\">\n          <form onSubmit={sendEmail}>\n            <input\n              id=\"from_name\"\n              type=\"text\"\n              name=\"from_name\"\n              placeholder=\"Name\"\n              onChange={handleChange}\n            />\n            <input\n              id=\"email\"\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={handleChange}\n            />\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              placeholder=\"Message\"\n              onChange={handleChange}\n            ></textarea>\n            <button type=\"submit\" className=\"submit-button\">\n              Send\n            </button>\n          </form>\n          {showSuccess && \n          <div className=\"form-message\" style={{color: \"green\"}}> Email Sent! </div>\n          }\n          {showMissing && \n          <div className=\"form-message\" style={{color: \"red\"}}> Please fill out all fields! </div>\n          }\n        </div>\n      </Container>\n    </Outer>\n  );\n};\n\nexport default Contact;\n","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Footer.js",["94","95","96","97"],"import React, { useEffect, useState } from 'react';\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Socials from '../components/Socials';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0px 10%;\n  align-items: center;\n  font-size: 1.2rem;\n  font-weight: normal;\n  height: 100px;\n  color: ${props => props.dark ? \"#D3D3D3\" : \"black\"};\n  font-weight: 500;\n  background-color: ${props => props.theme.lightTheme.footer};\n\n  ${props => props.dark && css`\n  background-color: ${props => props.theme.darkTheme.footer};\n  `}\n\n  @media (max-width: 550px) {\n\n    justify-content: center;\n    flex-direction: column-reverse;\n    height: 200px;\n\n  }\n`;\n\nconst Footer = ({theme}) => {\n  return(\n  <Container dark={theme === \"dark\"}>\n      Steven Lam | 2020 \n     <div id = \"footer-socials\">\n      <Socials theme={theme} size=\"medium\"></Socials>\n     </div>\n  </Container>\n  )\n};\n\n\nexport default Footer;","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Skills.js",[],"C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\Socials.js",["98","99","100","101"],"import React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MailIcon from '@material-ui/icons/MailOutline';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: ${props => props.align ? props.align : \"\"};\n  height: 100px;\n  color: ${props => props.dark ? \"#D3D3D3\" : \"black\"};\n  font-weight: 500;\n  background-color: ${props => props.theme.lightTheme.Socials};\n\n  a {\n    color: inherit;\n  }\n\n  svg {\n    cursor: pointer;\n    margin: 12px;\n    transform: scale(1.2);\n  }\n\n  svg:hover {\n    color: ${props => props.dark ? \"white\" : \"#8B6E9D\"}\n  }\n`;\n\nconst Socials = ({theme, size, align}) => {\n  return(\n  <Container align={align} dark={theme === \"dark\"}>\n    <a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/steven-lm\">\n     <GitHubIcon fontSize={size}></GitHubIcon>\n     </a>\n     <a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/stevenlam1/\">\n      <LinkedInIcon fontSize={size} ></LinkedInIcon>\n     </a>\n     <a rel=\"noreferrer\"target=\"_blank\" href=\"mailto:stevenlamfn@gmail.com\">\n      <MailIcon fontSize={size}></MailIcon>\n     </a>\n     <a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.instagram.com/s.tvn_/?hl=en\">\n      <InstagramIcon fontSize={size}></InstagramIcon>\n     </a>\n  </Container>\n  )\n};\n\n\nSocials.defaultProps = {\n  size: \"large\",\n};\n\nexport default Socials;","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\ProjectCard.js",["102","103","104","105","106","107","108"],"import React, { useEffect, useState } from \"react\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport Socials from \"../components/Socials\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport test from \"../components/data/images/personal.JPG\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 35px;\n  border-radius: 10px;\n  padding: 20px;\n  font-size: 1.2rem;\n  font-weight: normal;\n  color: ${(props) => (props.dark ? \"#808080\" : \"black\")};\n  font-weight: 500;\n\n  a {\n    color: ${(props) => (props.dark ? \"black\" : \"black\")};\n    text-decoration: none; /* no underline */\n  }\n\n  a: hover {\n    color: ${props => props.dark ? \"#808080\" : \"#8B6E9D\"}\n  }\n\n  .image {\n    position: relative;\n    z-index: 1;\n\n    img {\n      height: 200px;\n      width: 400px;\n      border-radius: 5px;\n    }\n\n  }\n\n  .project-heading {\n    margin-top: 10px;\n    display: flex;\n    font-size: 1.3rem;\n  }\n\n  .project-title {\n    margin-right: 15px;\n  }\n\n  .project-label {\n    color: ${(props) => (props.dark ? \"#D3D3D3\" : \"#8B6E9D\")};\n  }\n\n  .project-description {\n    text-align: left;\n    padding: 15px;\n    position: relative;\n    display: flex;\n    align-items: center;\n    z-index: 2;\n    box-shadow: 0px 3px 10px -3px rgba(0,0,0,0.54);\n    background-color: ${(props) => (props.dark ? \"#050505\" : \"white\")};\n    color: ${(props) => (props.dark ? \"#808080\" : \"black\")};\n    height: 80px;\n    margin: 20px 0px;;\n    width: 115%;\n    font-weight: normal;\n    border-radius: 8px;\n  }\n\n  .project-stack {\n    text-align: left;\n    margin-top: 10px;\n    font-weight: bold;\n    color: ${(props) => (props.dark ? \"#808080\" : \"black\")};\n  }\n\n  .main {\n    width: 100%;\n    position: relative:\n    z-index: 2;\n  }\n\n  .project-buttons {\n    padding: 15px 0px;\n    align-items: center;\n    display: flex;\n  }\n\n  .github-button {\n    cursor: pointer;\n    margin-right: 15px;\n  }\n\n  .open-button {\n    cursor: pointer;\n  }\n\n  @media (max-width: 550px) {\n    .project-description {\n      height: 120px;\n    }\n\n    justify-content: center;\n\n    #ProjectCard-socials {\n      display: none;\n    }\n  }\n\n  @media (max-width: 490px) {\n    font-size: 0.9rem;\n    margin-bottom: 70px;\n    margin: 35px 15px;\n\n    .project-description {\n      height: 100px;\n    }\n\n    .project-heading {\n      margin-top: 10px;\n      display: flex;\n      font-size: 1rem;\n    }\n\n    justify-content: center;\n\n    #ProjectCard-socials {\n      display: none;\n    }\n  }\n\n\n\n  @media (max-width: 933px) {\n    height: 240px;\n\n    .project-title {\n      font-size: 1.1rem;\n    }\n\n    .project-stack {\n      font-size: 1.1rem;\n    }\n\n    .project-label {\n      font-size: 1.1rem;\n    }\n\n    .image {\n      display: none;\n    }\n\n    .project-description {\n      width: 100%;\n    }\n    \n  }\n\n  :hover {\n    .project-description {\n      -webkit-transition-duration: 300ms;\n      -webkit-transform: translateX(15px);\n    }\n  }\n\n\n`;\n\nconst ProjectCard = ({ theme, name, label, description, stack, img, github, link}) => {\n  return (\n    <ScrollAnimation\n      className=\"project-anim\"\n      initiallyVisible={true}\n      animateIn=\"pulse\"\n      animateOnce={true}\n      duration={0.5}\n    >\n      <Container dark={theme === \"dark\"}>\n        <div className=\"main\">\n          <div className=\"project-heading\">\n            <div className=\"project-title\">{name}</div>\n            <div className=\"project-label\">{label}</div>\n          </div>\n            <div className=\"project-description\">{description}</div>\n            <div className=\"project-stack\">\n              {stack.map(\n                (tech, i) => `${tech} ${i < stack.length - 1 ? \" - \" : \"\"}`\n              )}\n          </div>\n          <div className=\"project-buttons\">\n            {github &&\n              <a href={github} className=\"github-button\" rel=\"noreferrer\" target=\"_blank\">\n              <GitHubIcon fontSize=\"medium\"></GitHubIcon>\n              </a>\n            }\n            {\n              link &&\n              <a href={github} className=\"open-button\" rel=\"noreferrer\" target=\"_blank\">\n                <LaunchIcon fontSize=\"medium\"></LaunchIcon>\n              </a>\n            }\n          </div>\n        </div>\n\n        <div className=\"image\">\n          <img\n            src={require(`../components/data/images/${img}`).default}\n            alt=\"project thumbnail\"\n          ></img>\n        </div>\n      </Container>\n    </ScrollAnimation>\n  );\n};\n\nexport default ProjectCard;\n","C:\\Users\\Steven\\Desktop\\portfolio\\src\\components\\SkillCard.js",["109"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\n\nconst MOBILE_SIZE = \"500\";\nconst TABLET_SIZE = \"1100\";\n\nconst Container = styled.div`\n  box-shadow: 0px 3px 10px -3px rgba(0,0,0,0.54);\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  padding: 13px;\n  height: 110px;\n  width: 110px;\n  margin: 15px;\n  justify-content: space-between;\n  align-items: center;\n  color: ${(props) => props.fontColor};\n  background-color: ${props => props.dark ? \"#1F1F1F\" : \"white\"};\n\n  .icon {\n    svg {\n      height: 35px;\n      width: 35px;\n    }\n  }\n\n  @media (max-width: ${TABLET_SIZE}${\"px\"}) {\n    padding: 13px;\n    height: 80px;\n    width: 80px;\n\n    svg {\n      height: 28px;\n      width: 28px;\n    }\n  }\n\n  @media (max-width: ${MOBILE_SIZE}${\"px\"}) {\n    margin: 7px 4px;\n  }\n\n  .name {\n    font-size: 1.2rem;\n    font-weight: bold;\n\n    @media (max-width: ${TABLET_SIZE}${\"px\"}) {\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nconst SkillCard = ({ children, theme, name, color }) => {\n  return(\n    <ScrollAnimation\n    className=\"project-anim\"\n    initiallyVisible={true}\n    animateIn=\"tada\"\n    animateOnce={true}\n    duration={1}\n  >\n  <Container fontColor={color} dark={theme === \"dark\"}>\n    <div className=\"icon\">\n      {children}\n    </div>\n    <div className=\"name\">\n      {name}\n    </div>\n  </Container>\n  </ScrollAnimation>\n  )\n};\n\nexport default SkillCard;\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"114","severity":1,"message":"118","line":13,"column":8,"nodeType":"116","messageId":"117","endLine":13,"endColumn":12},{"ruleId":"114","severity":1,"message":"119","line":15,"column":3,"nodeType":"116","messageId":"117","endLine":15,"endColumn":7},{"ruleId":"114","severity":1,"message":"120","line":16,"column":3,"nodeType":"116","messageId":"117","endLine":16,"endColumn":13},{"ruleId":"114","severity":1,"message":"121","line":18,"column":3,"nodeType":"116","messageId":"117","endLine":18,"endColumn":9},{"ruleId":"114","severity":1,"message":"122","line":20,"column":3,"nodeType":"116","messageId":"117","endLine":20,"endColumn":12},{"ruleId":"114","severity":1,"message":"123","line":21,"column":3,"nodeType":"116","messageId":"117","endLine":21,"endColumn":11},{"ruleId":"114","severity":1,"message":"124","line":32,"column":10,"nodeType":"116","messageId":"117","endLine":32,"endColumn":18},{"ruleId":"114","severity":1,"message":"125","line":32,"column":20,"nodeType":"116","messageId":"117","endLine":32,"endColumn":31},{"ruleId":"114","severity":1,"message":"126","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":12},{"ruleId":"114","severity":1,"message":"127","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"126","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":12},{"ruleId":"114","severity":1,"message":"127","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"128","line":4,"column":18,"nodeType":"116","messageId":"117","endLine":4,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":12},{"ruleId":"114","severity":1,"message":"129","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":13},{"ruleId":"114","severity":1,"message":"127","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"130","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"131","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":12},{"ruleId":"114","severity":1,"message":"127","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"130","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"132","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":22},{"ruleId":"114","severity":1,"message":"133","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":17},{"ruleId":"114","severity":1,"message":"127","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"130","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"128","line":2,"column":18,"nodeType":"116","messageId":"117","endLine":2,"endColumn":21},{"ruleId":"114","severity":1,"message":"133","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":17},{"ruleId":"114","severity":1,"message":"127","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"130","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"132","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":22},{"ruleId":"114","severity":1,"message":"133","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":17},{"ruleId":"114","severity":1,"message":"128","line":4,"column":18,"nodeType":"116","messageId":"117","endLine":4,"endColumn":21},{"ruleId":"114","severity":1,"message":"134","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":15},{"ruleId":"114","severity":1,"message":"135","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":12},{"ruleId":"114","severity":1,"message":"128","line":2,"column":18,"nodeType":"116","messageId":"117","endLine":2,"endColumn":21},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Fade' is defined but never used.","'Link' is defined but never used.","'DirectLink' is defined but never used.","'Events' is defined but never used.","'scrollSpy' is defined but never used.","'scroller' is defined but never used.","'showBack' is assigned a value but never used.","'setShowBack' is assigned a value but never used.","'logo' is defined but never used.","'useEffect' is defined but never used.","'css' is defined but never used.","'Slide' is defined but never used.","'useState' is defined but never used.","'poly' is defined but never used.","'DarkModeToggle' is defined but never used.","'PropTypes' is defined but never used.","'Socials' is defined but never used.","'test' is defined but never used.","no-global-assign","no-unsafe-negation"]